
#Make a seprate function
def format_data(account):
# Format the account data into printable format.
    account_name=account["name"]
    account_desc=account["description"]
    account_country=account["country"]
    return f"{account_name}, {account_desc}, from {account_country}"

def check_answer(guess,a_followers,b_followers):
    """ use if statements to check if user is correct"""
    if a_followers > b_followers:
        return guess=="a"
    else:
        return guess=="b"
        # if guess=="a": both are same
        #     return True
        # else:
        #     return False
score=0
game_should_continue=True
account_b=random.choice(data)
# Make the game repeatable

while game_should_continue:
# Generate a random account from data.

# Making account at position at B become the next account at position at A.

    account_a=account_b
    account_b=random.choice(data)

    if account_a==account_b:
        account_b=random.choice(data)


    print(f"Compare A: {format_data(account_a)}.")
    print(f"Compare B: {format_data(account_b)}.")


    # Ask user for a guess.
    guess=input("Who has more followers ? A or B\t").lower()

    # check if user is correct.

    # Get follower count of each account.
    a_follower_count=account_a["follower_count"]
    b_follower_count=account_b["follower_count"]

    is_correct=check_answer(guess,a_follower_count,b_follower_count)

    clear()
    # give feedback on their guess.
    if is_correct:
        score+=1
        print(f"you are right! Current score: {score}")
    else:
        game_should_continue=False
        print(f"Sorry , you are wrong. Final score: {score}")
